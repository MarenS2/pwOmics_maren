% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pwOmics_get_functions.R
\name{getGenesIntersection}
\alias{getGenesIntersection}
\title{Get genes intersection for the omics data on the different time points.}
\usage{
getGenesIntersection(data_omics, tp_prot, tp_genes, updown = FALSE,
  phospho = TRUE)
}
\arguments{
\item{data_omics}{OmicsData object.}

\item{tp_prot}{numeric integer defining protein timepoint measurement chosen 
for comparison.}

\item{tp_genes}{numeric integer defining gene/transcript timepoint 
measurement chosen for comparison.}

\item{updown}{boolean value; TRUE in case up- and downregulation should be
checked individually for intersection. Type of checking is defined with
parameter 'phospho'.}

\item{phospho}{boolean value; TRUE in case up- and downregulation should be
checked based on provided downstream phosphoprotein influence from 
identifyPR function; FALSE in case up- and downregulation should be checked
for without phosphoprotein database knowledge. Default is TRUE.}
}
\value{
list with three elements: 1) character vector of gene
IDs identified in both upstream and downstream analysis 2) protein time point
3) gene/transcript time point.
}
\description{
Get genes intersection for the omics data on the different time points.
}
\examples{
data(OmicsExampleData)
data_omics = readOmics(tp_prots = c(0.25, 1, 4, 8, 13, 18, 24), 
tp_genes = c(1, 4, 8, 13, 18, 24), OmicsExampleData,
PWdatabase = c("biocarta", "kegg", "nci", "reactome"), 
TFtargetdatabase = c("userspec"))
data_omics = readPhosphodata(data_omics, 
phosphoreg = system.file("extdata", "phospho_reg_table.txt", 
package = "pwOmics")) 
\dontrun{
data_omics = readTFdata(data_omics, 
TF_target_path = system.file("extdata", "TF_targets.txt", 
package = "pwOmics"))
data_omics_plus = readPWdata(data_omics, 
loadgenelists = system.file("extdata/Genelists", package = "pwOmics"))
data_omics_plus = identifyPR(data_omics_plus)
setwd(system.file("extdata/Genelists", package = "pwOmics"))
data_omics = identifyPWs(data_omics_plus)
data_omics = identifyTFs(data_omics)
data_omics = identifyPWTFTGs(data_omics)
data_omics = identifyRsofTFs(data_omics, noTFs_inPW = 1, order_neighbors = 10)
getGenesIntersection(data_omics, tp_prot = 4, tp_genes = 4, updown = FALSE, 
phospho = TRUE)
}
}
\keyword{manip}

